// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheDuelX.Data;

#nullable disable

namespace TheDuelX.Data.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250929232058_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheDuelX.Shared.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ManaCost")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attack = 2,
                            Description = "Um guerreiro jovem e determinado.",
                            Health = 1,
                            ImageUrl = "/images/cards/guerreiro-iniciante.png",
                            ManaCost = 1,
                            Name = "Guerreiro Iniciante",
                            Rarity = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Attack = 3,
                            Description = "Conjura bolas de fogo devastadoras.",
                            Health = 2,
                            ImageUrl = "/images/cards/mago-chamas.png",
                            ManaCost = 2,
                            Name = "Mago das Chamas",
                            Rarity = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Attack = 0,
                            Description = "Causa 3 de dano a qualquer alvo.",
                            Health = 0,
                            ImageUrl = "/images/cards/bola-fogo.png",
                            ManaCost = 3,
                            Name = "Bola de Fogo",
                            Rarity = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Attack = 8,
                            Description = "Uma criatura lendária com poder devastador.",
                            Health = 8,
                            ImageUrl = "/images/cards/dragao-anciao.png",
                            ManaCost = 8,
                            Name = "Dragão Ancião",
                            Rarity = 4,
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            Attack = 0,
                            Description = "Protege uma criatura, dando +0/+3.",
                            Health = 0,
                            ImageUrl = "/images/cards/escudo-magico.png",
                            ManaCost = 1,
                            Name = "Escudo Mágico",
                            Rarity = 0,
                            Type = 1
                        });
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.CardEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Trigger")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("CardEffects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 3,
                            Description = "Causa 3 de dano",
                            Trigger = 0,
                            Type = 0,
                            Value = 3
                        },
                        new
                        {
                            Id = 2,
                            CardId = 4,
                            Description = "Causa 2 de dano a todas as criaturas inimigas",
                            Trigger = 0,
                            Type = 0,
                            Value = 2
                        },
                        new
                        {
                            Id = 3,
                            CardId = 5,
                            Description = "Dá +3 de vida à criatura alvo",
                            Trigger = 0,
                            Type = 3,
                            Value = 3
                        });
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.DeckCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("DeckId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("DeckId", "CardId")
                        .IsUnique();

                    b.ToTable("DeckCards");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Coins")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.PlayerCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AcquiredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("PlayerId", "CardId")
                        .IsUnique();

                    b.ToTable("PlayerCards");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchasedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShopItemId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ShopItemId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.PurchasedCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchasedCards");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A loja principal do jogo onde você pode comprar cartas.",
                            IsActive = true,
                            Name = "Loja Principal"
                        });
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.ShopItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Contém 5 cartas comuns e 1 incomum.",
                            Name = "Pacote Iniciante",
                            Price = 100,
                            ShopId = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Contém 3 cartas comuns, 2 incomuns e 1 rara.",
                            Name = "Pacote Premium",
                            Price = 250,
                            ShopId = 1,
                            Type = 0
                        });
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.ShopItemCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<double>("DropRate")
                        .HasPrecision(3, 2)
                        .HasColumnType("float(3)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShopItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ShopItemId");

                    b.ToTable("ShopItemCards");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.CardEffect", b =>
                {
                    b.HasOne("TheDuelX.Shared.Models.Card", null)
                        .WithMany("Effects")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Deck", b =>
                {
                    b.HasOne("TheDuelX.Shared.Models.Player", "Player")
                        .WithMany("Decks")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.DeckCard", b =>
                {
                    b.HasOne("TheDuelX.Shared.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheDuelX.Shared.Models.Deck", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.PlayerCard", b =>
                {
                    b.HasOne("TheDuelX.Shared.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheDuelX.Shared.Models.Player", "Player")
                        .WithMany("Collection")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Purchase", b =>
                {
                    b.HasOne("TheDuelX.Shared.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheDuelX.Shared.Models.ShopItem", "ShopItem")
                        .WithMany()
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("ShopItem");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.PurchasedCard", b =>
                {
                    b.HasOne("TheDuelX.Shared.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheDuelX.Shared.Models.Purchase", "Purchase")
                        .WithMany("ReceivedCards")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.ShopItem", b =>
                {
                    b.HasOne("TheDuelX.Shared.Models.Shop", "Shop")
                        .WithMany("Items")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.ShopItemCard", b =>
                {
                    b.HasOne("TheDuelX.Shared.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheDuelX.Shared.Models.ShopItem", "ShopItem")
                        .WithMany("Cards")
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("ShopItem");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Card", b =>
                {
                    b.Navigation("Effects");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Deck", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Player", b =>
                {
                    b.Navigation("Collection");

                    b.Navigation("Decks");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Purchase", b =>
                {
                    b.Navigation("ReceivedCards");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.Shop", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TheDuelX.Shared.Models.ShopItem", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
